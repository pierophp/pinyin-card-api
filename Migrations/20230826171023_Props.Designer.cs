// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PinyinCardApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230826171023_Props")]
    partial class Props
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AudioCh")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_ch");

                    b.Property<string>("AudioDe")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_de");

                    b.Property<string>("AudioEn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_en");

                    b.Property<string>("AudioFr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_fr");

                    b.Property<string>("AudioIt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_it");

                    b.Property<string>("AudioPt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_pt");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("ExtraCh")
                        .HasColumnType("Json")
                        .HasColumnName("extra_ch");

                    b.Property<string>("ExtraDe")
                        .HasColumnType("Json")
                        .HasColumnName("extra_de");

                    b.Property<string>("ExtraEn")
                        .HasColumnType("Json")
                        .HasColumnName("extra_en");

                    b.Property<string>("ExtraFr")
                        .HasColumnType("Json")
                        .HasColumnName("extra_fr");

                    b.Property<string>("ExtraIt")
                        .HasColumnType("Json")
                        .HasColumnName("extra_it");

                    b.Property<string>("ExtraPt")
                        .HasColumnType("Json")
                        .HasColumnName("extra_pt");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("image");

                    b.Property<string>("NameChs")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_chs");

                    b.Property<string>("NameCht")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_cht");

                    b.Property<string>("NameDe")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_de");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_en");

                    b.Property<string>("NameFr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_fr");

                    b.Property<string>("NameIt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_it");

                    b.Property<string>("NamePt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_pt");

                    b.Property<string>("Pinyin")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pinyin");

                    b.Property<string>("Props")
                        .HasColumnType("Json")
                        .HasColumnName("props");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("card");
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("NameChs")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_chs");

                    b.Property<string>("NameCht")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_cht");

                    b.Property<string>("NameDe")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_de");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_en");

                    b.Property<string>("NameFr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_fr");

                    b.Property<string>("NameIt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_it");

                    b.Property<string>("NamePt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_pt");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("parent_category_id");

                    b.Property<string>("Props")
                        .HasColumnType("Json")
                        .HasColumnName("props");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.HasOne("Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.HasOne("Entities.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
